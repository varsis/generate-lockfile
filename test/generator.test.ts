import fs from 'fs'
import path from 'path'
import { generateLockfileString, getAndParseFiles } from '../src/generator'
import { expect } from 'chai'

const header = `# This file is generated by running "yarn install" inside your project.
# Manual changes might be lost - proceed with caution!

`

describe('Executes', () => {
    it('generates an identical lockfile for test package', () => {
        const packagePath = path.resolve(path.join(__dirname, './testPackage/package.json'))
        const lockfilePath = path.resolve(path.join(__dirname, './testPackage/yarn.lock'))
        const expectedLockfile = fs.readFileSync(lockfilePath, 'utf-8')

        const { inputLockfile, inputPackageJson } = getAndParseFiles(lockfilePath, packagePath)
        const result = generateLockfileString(
            { ...inputPackageJson.dependencies, ...inputPackageJson.devDependencies },
            inputLockfile
        )

        fs.writeFileSync('/Users/chris/Desktop/testlock', result)
        expect(header + result).equals(expectedLockfile)
    })
    it.only('generates an identical lockfile for test package 2', () => {
        const packagePath = path.resolve(path.join(__dirname, './testPackage2/package.json'))
        const lockfilePath = path.resolve(path.join(__dirname, './testPackage2/yarn.lock'))
        const expectedLockfile = fs.readFileSync(lockfilePath, 'utf-8')

        const { inputLockfile, inputPackageJson } = getAndParseFiles(lockfilePath, packagePath)
        const result = generateLockfileString(
            { ...inputPackageJson.dependencies, ...inputPackageJson.devDependencies },
            inputLockfile
        )

        fs.writeFileSync('/Users/chris/Desktop/testlock', result)
        expect(header + result).equals(expectedLockfile)
    })
})
